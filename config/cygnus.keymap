/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        up5: up5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp UP &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW>;
            label = "UP5";
        };

        down5: down5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN &kp DOWN_ARROW &kp DOWN &kp DOWN_ARROW &kp DOWN_ARROW>;
            label = "DOWN5";
        };

        up10: up10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp UP &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW>;
            label = "UP10";
        };

        down10: down10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN &kp DOWN_ARROW &kp DOWN &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>;
            label = "DOWN10";
        };
    };

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
            hold-trigger-key-positions = <6 18 30 31 19 7 20 32 8 9 21 33 34 22 10 11 23 35>;
        };

        lhtl: lhtl {
            compatible = "zmk,behavior-hold-tap";
            label = "LHTL";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        lhtr: lhtr {
            compatible = "zmk,behavior-hold-tap";
            label = "LHTR";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
            hold-trigger-key-positions = <0 1 4 5 12 13 14 15 16 17 24 25 26 27 28 29 2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB               &kp SEMI           &kp COMMA            &lhtl 2 PERIOD    &lhtl 1 P     &kp Y              &kp F          &lhtr 1 G      &kp C             &kp R  &kp L               &kp FSLH
&mt LEFT_SHIFT ENTER  &hml LEFT_SHIFT A  &hml LEFT_CONTROL O  &hml LS(LMETA) E  &hml LMETA U  &kp I              &kp D          &hmr RMETA H   &hmr LS(RMETA) T  &kp N  &hmr RIGHT_SHIFT S  &mt RIGHT_SHIFT SPACE
&kp HASH              &kp SQT            &kp Q                &kp J             &lhtl 3 K     &kp X              &kp B          &lhtr 3 M      &kp W             &kp V  &kp Z               &kp AT
                                         &lhtl 1 BACKSPACE    &lt 3 ENTER       &kp ESCAPE    &lhtl 0 BACKSPACE  &lhtl 3 SPACE  &lhtl 0 SPACE
            >;
        };

        mod {
            bindings = <
&kp LG(LA(ESCAPE))  &trans  &kp LEFT_SHIFT  &none   &trans  &trans  &up5    &kp HOME  &kp UP_ARROW    &kp END    &none   &kp BACKSPACE
&kp LG(BACKSPACE)   &none   &none           &none   &none   &none   &down5  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&trans              &none   &none           &trans  &trans  &none   &none   &trans    &trans          &trans     &trans  &trans
                            &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        modopt {
            bindings = <
&kp LG(LA(ESCAPE))  &trans  &kp LEFT_SHIFT  &none   &trans  &trans  &up10    &kp HOME      &kp UP_ARROW    &kp END        &none   &kp LA(BACKSPACE)
&kp LG(BACKSPACE)   &none   &none           &none   &none   &none   &down10  &kp LA(LEFT)  &kp DOWN_ARROW  &kp LA(RIGHT)  &trans  &trans
&trans              &none   &none           &trans  &trans  &none   &none    &trans        &trans          &trans         &trans  &trans
                            &trans          &trans  &trans  &trans  &trans   &trans
            >;
        };

        num {
            bindings = <
&kp LC(TAB)      &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp PERCENT  &kp RIGHT_PARENTHESIS  &kp EQUAL  &kp PLUS   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&kp LC(LS(TAB))  &kp TILDE   &kp LEFT_BRACKET      &kp AMPS     &kp RIGHT_BRACKET      &kp BSLH   &kp ASTRK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PERIOD    &trans
&kp GRAVE        &kp EXCL    &kp LEFT_BRACE        &kp MINUS    &kp RIGHT_BRACE        &kp PIPE   &kp UNDER  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &kp CARET
                             &trans                &none        &trans                 &trans     &none      &trans
            >;
        };
    };
};

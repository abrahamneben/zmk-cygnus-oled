/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <350>;
    flavor = "balanced";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&lt {
    tapping-term-ms = <350>;
    flavor = "balanced";
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        up5: up5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp UP &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW>;
            label = "UP5";
        };

        down5: down5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN &kp DOWN_ARROW &kp DOWN &kp DOWN_ARROW &kp DOWN_ARROW>;
            label = "DOWN5";
        };

        up10: up10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp UP &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW>;
            label = "UP10";
        };

        down10: down10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN &kp DOWN_ARROW &kp DOWN &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>;
            label = "DOWN10";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB               &kp SEMI            &kp COMMA           &kp PERIOD   &kp P               &kp Y  &kp F  &kp G                &kp C  &kp R                &kp L              &kp FSLH
&mt LEFT_SHIFT ENTER  &kp A               &mt LEFT_CONTROL O  &kp E        &mt LEFT_COMMAND U  &kp I  &kp D  &mt RIGHT_COMMAND H  &kp T  &mt RIGHT_CONTROL N  &kp S              &kp SPACE
&kp HASH              &mt LEFT_SHIFT SQT  &lt 2 Q             &lt 1 J      &lt 3 K             &kp X  &kp B  &lt 3 M              &kp W  &kp V                &mt RIGHT_SHIFT Z  &kp AT
                                          &none               &lt 3 ENTER  &kp ESCAPE          &none  &none  &none
            >;
        };

        mod {
            bindings = <
&kp LG(LA(ESCAPE))  &trans  &kp LEFT_SHIFT  &none   &trans  &trans  &up5    &kp HOME  &kp UP_ARROW    &kp END    &none      &kp BACKSPACE
&kp LG(BACKSPACE)   &none   &none           &none   &none   &none   &down5  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp MINUS  &trans
&trans              &none   &none           &trans  &trans  &none   &none   &trans    &trans          &trans     &trans     &trans
                            &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        modopt {
            bindings = <
&kp LG(LA(ESCAPE))  &trans  &kp LEFT_SHIFT  &none   &trans  &trans  &up10    &kp HOME      &kp UP_ARROW    &kp END        &none   &kp LA(BACKSPACE)
&kp LG(BACKSPACE)   &none   &none           &none   &none   &none   &down10  &kp LA(LEFT)  &kp DOWN_ARROW  &kp LA(RIGHT)  &trans  &trans
&trans              &none   &none           &trans  &trans  &none   &none    &trans        &trans          &trans         &trans  &trans
                            &trans          &trans  &trans  &trans  &trans   &trans
            >;
        };

        num {
            bindings = <
&kp LC(TAB)      &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp PERCENT  &kp RIGHT_PARENTHESIS  &kp EQUAL  &kp PLUS   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&kp LC(LS(TAB))  &kp TILDE   &kp LEFT_BRACKET      &kp AMPS     &kp RIGHT_BRACKET      &kp BSLH   &kp ASTRK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &trans
&kp GRAVE        &kp EXCL    &kp LEFT_BRACE        &kp MINUS    &kp RIGHT_BRACE        &kp PIPE   &kp UNDER  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &kp CARET
                             &trans                &none        &trans                 &trans     &none      &trans
            >;
        };
    };
};
